#!/bin/bash -e

# copy the docker config file from $SNAP into $SNAP_COMMON if it doesn't exist
if [ ! -f "$SNAP_DATA/config/daemon.json" ]; then
    mkdir -p "$SNAP_DATA/config"
    cp "$SNAP/config/daemon.json" "$SNAP_DATA/config/daemon.json"
fi

# get the hostname to set that in the config file as well
HOSTNAME=$(hostname)

# we need copy the config file into $SNAP_COMMON where it can be modified
# but also need to modify the "homedir" root level spec in the yaml to be
# "$SNAP_COMMON/var/lib/iotedge"
# as well as the management + workload uri's to live in a snap specific
# portion of /run that is writable from within the snap
mkdir -p "$SNAP_DATA/etc/iotedge/storage"
mkdir -p "$SNAP_COMMON/var/lib/iotedge"
mkdir -p "$SNAP_COMMON/run"
# ensure the layouts dir for /etc/docker exists
mkdir -p "$SNAP_DATA/etc/docker"
# write new config file based on template
${SNAP}/bin/yq w "${SNAP}/etc/iotedge/config.yaml.template" \
      homedir --style=double "${SNAP_COMMON}/var/lib/iotedge" | \
      ${SNAP}/bin/yq w - connect.management_uri --style=double "unix://${SNAP_COMMON}/run/mgmt.sock" | \
      ${SNAP}/bin/yq w - connect.workload_uri   --style=double "unix://${SNAP_COMMON}/run/workload.sock" | \
      ${SNAP}/bin/yq w - listen.management_uri  --style=double "unix://${SNAP_COMMON}/run/mgmt.sock" | \
      ${SNAP}/bin/yq w - listen.workload_uri    --style=double "unix://${SNAP_COMMON}/run/workload.sock" | \
      ${SNAP}/bin/yq w - hostname               --style=double "${HOSTNAME}" \
  > "${SNAP_DATA}/etc/iotedge/config.yaml"

# also disable the service before installing so that it doesn't cause the
# installation to be aborted
snapctl stop --disable "$SNAP_NAME.iotedged"

# disable the dockerd service if there is not enough interfaces connected
if ! snapctl is-connected docker-support || \
   ! snapctl is-connected firewall-control || \
   ! snapctl is-connected home ; then
  snapctl stop --disable "$SNAP_NAME.dockerd"
fi
